<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Phonics Letter Game - Trace then Speak</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background: #f0f8ff;
    }
    #container {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 20px;
      margin-bottom: 10px;
    }
    #prompt {
      font-size: 24px;
      margin: 20px 0 10px 0;
      min-width: 320px;
      text-align: left;
    }
    #listeningIndicator {
      color: red;
      font-weight: bold;
      font-size: 18px;
      display: none;
      margin-left: 10px;
      user-select: none;
    }
    #canvas {
      border: 2px solid #333;
      touch-action: none;
      background: #fff;
      position: relative;
      margin: 0 auto;
      display: block;
      cursor: crosshair;
    }
    button {
      font-size: 18px;
      padding: 10px 20px;
      cursor: pointer;
    }
    #liveTranscript {
      font-size: 20px;
      color: #333;
      margin-top: 10px;
      min-height: 28px;
      white-space: pre-wrap;
      word-break: break-word;
    }
  </style>
</head>
<body>
  <h1>Phonics Letter Game - Trace then Speak</h1>

  <div id="container">
    <div id="prompt">Trace the letter on the screen.</div>
    <button id="speakBtn" disabled>üé§ Speak Letter</button>
    <div id="listeningIndicator">Listening...</div>
  </div>

  <canvas id="canvas" width="400" height="400"></canvas>

  <div id="liveTranscript"></div>

  <audio id="successSound" src="https://www.soundjay.com/misc/sounds/bell-ringing-05.mp3"></audio>

  <script>
    let letters = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];
    letters = letters.sort(() => Math.random() - 0.5);
    let currentIndex = 0;
    let wrongLetters = [];

    const prompt = document.getElementById('prompt');
    const canvas = document.getElementById('canvas');
    const speakBtn = document.getElementById('speakBtn');
    const successSound = document.getElementById('successSound');
    const transcriptDiv = document.getElementById('liveTranscript');
    const listeningIndicator = document.getElementById('listeningIndicator');

    const ctx = canvas.getContext('2d');
    let drawing = false;
    let traced = false;
    let speechCorrect = false;

    function drawLetterOnCanvas(letter) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.font = "220px Arial";
      ctx.fillStyle = "#ddd";
      ctx.textAlign = "center";
      ctx.textBaseline = "middle";
      ctx.fillText(letter, canvas.width / 2, canvas.height / 2);
    }

    function showLetter(index) {
      const letter = letters[index];
      prompt.textContent = `Trace the letter: ${letter}`;
      transcriptDiv.textContent = "";
      speechCorrect = false;
      traced = false;
      speakBtn.disabled = true; // Disabled until tracing done
      drawLetterOnCanvas(letter);
    }

    canvas.addEventListener('pointerdown', (e) => {
      drawing = true;
      ctx.beginPath();
      ctx.moveTo(e.offsetX, e.offsetY);
    });

    canvas.addEventListener('pointermove', (e) => {
      if (!drawing) return;
      ctx.lineWidth = 4;
      ctx.lineCap = 'round';
      ctx.strokeStyle = '#000';
      ctx.lineTo(e.offsetX, e.offsetY);
      ctx.stroke();
    });

    canvas.addEventListener('pointerup', () => {
      if (!drawing) return;
      drawing = false;
      traced = true;
      prompt.textContent = "üñäÔ∏è Tracing done! Now click Speak Letter and say the letter.";
      speakBtn.disabled = false;
    });

    speakBtn.addEventListener('click', () => {
      if (!traced) {
        alert("Please trace the letter first!");
        return;
      }
      if (speechCorrect) {
        alert("You already pronounced the letter correctly! Move to next letter.");
        return;
      }

      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
      if (!SpeechRecognition) {
        alert("Speech Recognition API is not supported in this browser. Please use Chrome.");
        return;
      }

      const recognition = new SpeechRecognition();
      recognition.lang = 'en-US';
      recognition.interimResults = true;
      recognition.maxAlternatives = 1;

      listeningIndicator.style.display = 'inline';
      transcriptDiv.textContent = "";
      prompt.textContent = "üé§ Listening... Please say the letter.";
      speakBtn.disabled = true;

      recognition.onresult = (event) => {
        let transcript = "";
        for (let i = event.resultIndex; i < event.results.length; i++) {
          transcript += event.results[i][0].transcript;
        }
        transcriptDiv.textContent = "üìù Heard so far: " + transcript;

        if (event.results[event.results.length - 1].isFinal) {
          const spoken = transcript.toLowerCase().trim();
          const expectedLetter = letters[currentIndex];
          if (spoken === expectedLetter) {
            speechCorrect = true;
            prompt.textContent = `üéâ Correct! You traced and pronounced "${expectedLetter}" correctly. Moving on...`;
            successSound.play();
            setTimeout(() => moveToNextLetter(), 1500);
          } else {
            prompt.textContent = `‚ùå Incorrect pronunciation: heard "${spoken}". Adding to review and moving on.`;
            wrongLetters.push(expectedLetter);
            setTimeout(() => moveToNextLetter(), 2000);
          }
        }
      };

      recognition.onerror = (event) => {
        listeningIndicator.style.display = 'none';
        prompt.textContent = `üé§ Error: ${event.error}. Moving on.`;
        wrongLetters.push(letters[currentIndex]);
        speakBtn.disabled = false;
        setTimeout(() => moveToNextLetter(), 1500);
      };

      recognition.onspeechend = () => {
        recognition.stop();
      };

      recognition.onend = () => {
        listeningIndicator.style.display = 'none';
        if (!speechCorrect && !transcriptDiv.textContent.includes("heard")) {
          // If no speech recognized
          wrongLetters.push(letters[currentIndex]);
          speakBtn.disabled = false;
          setTimeout(() => moveToNextLetter(), 1500);
        }
        speakBtn.disabled = false;
      };

      recognition.start();
    });

    function moveToNextLetter() {
      currentIndex++;
      if (currentIndex < letters.length) {
        showLetter(currentIndex);
      } else if (wrongLetters.length > 0) {
        letters = wrongLetters;
        wrongLetters = [];
        currentIndex = 0;
        prompt.textContent = "üìñ Review Phase: Let's try the missed letters again.";
        setTimeout(() => showLetter(currentIndex), 2000);
      } else {
        prompt.textContent = "üéâ All letters complete!";
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.font = "100px Arial";
        ctx.fillStyle = "green";
        ctx.textAlign = "center";
        ctx.textBaseline = "middle";
        ctx.fillText("‚úîÔ∏è", canvas.width / 2, canvas.height / 2);
        speakBtn.disabled = true;
      }
    }

    showLetter(currentIndex);
  </script>
</body>
</html>
